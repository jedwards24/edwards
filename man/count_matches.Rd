% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/count_matches.R, R/deprec-all.R
\name{count_matches}
\alias{count_matches}
\alias{count_matches2}
\title{Count elements, by column in a data frame, which exactly match a value}
\usage{
count_matches(
  df,
  values = string_missing(),
  all = FALSE,
  prop = FALSE,
  detail = FALSE
)

count_matches2(df, values = string_missing(), all = FALSE, prop = FALSE)
}
\arguments{
\item{df}{A data frame.}

\item{values}{Vector of values to match.}

\item{all}{By default, columns or values with no matches are omitted from the output.
Set \code{all=TRUE} to show all.}

\item{prop}{Default is to return counts of matches. Set \code{prop=TRUE} to return proportions of the number of rows.}

\item{detail}{Logical. If \code{TRUE} returns a tibble with counts for each element in \code{values}. If
\code{FALSE} then a named vector of total matches per column is returned.}
}
\value{
A named integer vector or tibble depending on the \code{detail} argument.
}
\description{
Counts the number of entries of each column in a data frame that exactly match the supplied values.
No coercion is used so the type must also match (unless the column is a factor in which case
character values will be matched to levels).

\code{count_matches2()} is a deprecated function that has been replaced by the \code{detail} argument.
}
\examples{
x <- data.frame(a = c("an", "banana", "candy"), b = c("on", "bon", "bonbon"), c = 1:3)
count_matches(x, "an", all = TRUE)
count_matches(x, "an")
count_matches(x, 1L)
count_matches(x, 1) # type must match
count_matches(x, "1") # type must match

df <- data.frame(x1 = c("a", ".", ".", "a"),
                 x2 = c("-", "-", "b", "b"),
                 x3 = rep("z", 4),
                 x4 = c("n/a", "f", "f", ""))
strs <- c(".", "-", "n/a", "na", "")
count_matches(df, strs, all = TRUE)
count_matches(df, strs, all = TRUE, detail = TRUE)
count_matches(df, strs, detail = TRUE)
}
